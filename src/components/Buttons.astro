---
import type { HTMLAttributes } from "astro/types";

export interface LinkProps extends HTMLAttributes<"button"> {
  href: string;
  variant?: "primary" | "secondary" | "outline" | "outline-dark" | "nav-link";
}

const { 
    variant = "primary",
    ...rest 
} = Astro.props;

---

<button type="submit" class:list={["btn", variant]} {...rest}>
  <slot />
</button>


<style lang="scss">
.primary {
  border-color: var(--brand-primary);
  background-color: var(--brand-primary);
  color: var(--dark-800);

  &:hover, &:active, &:focus {
    background-color: var(--dark-800);
    border-color: var(--dark-800);
    color: var(--light-200);
  }
}

.secondary {
  border-color: var(--brand-primary);
  background-color: var(--brand-primary);
  color: var(--dark-800);

  &:hover, &:active, &:focus {
    background-color: var(--dark-800);
    border-color: var(--dark-800);
    color: var(--light-200);
  }
}

.outline {
    border-color: var(--light-100);
    color: var(--light-100);
    background-color: transparent;

    &:hover, &:active, &:focus {
        background-color: var(--light-100);
        border-color: var(--light-100);
        color: var(--dark-900);
    }
}

.outline-dark {
    border-color: var(--dark-900);
    color: var(--dark-900);
    background-color: transparent;

    &:hover, &:active, &:focus {
        background-color: var(--light-100);
        border-color: var(--light-100);
        color: var(--dark-900);
    }
}

.nav-link {
    border: 0px;
    border-radius: 0;
    padding: 0;
    transition: color .3s;
    color: var(--dark-900);
    margin: 0;

    &:hover,
    &.active {
        color: var(--dark-900);

        &:after {
            transform: scaleX(1);
        }
    }
}

.nav-link:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    height: 2px;
    width: 100%;
    background: var(--brand-primary);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
}
</style>
