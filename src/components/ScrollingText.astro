---
import Heading from "./Heading.astro";


---

<section class="bg-primary">
    <div class="scrolling-marquee">
        <div class="scrolling-marquee-inner">
            <slot />
        </div>
    </div>
</section>

<style lang="scss">
/* SCROLLING MARQUEE */
.scrolling-marquee {
    max-width: 100%;
    width: fit-content;
    margin: auto;
    overflow: hidden;
    
    &-inner {
        margin: 0;
        padding: 2rem 0 1.75rem;
        list-style: none;
        display: flex;
        // flex-wrap: wrap;
        gap: 5rem;
        width: max-content;
        flex-wrap: nowrap;
        animation: scroll 30s forwards linear infinite;

        h2 {
            margin-bottom: 0;
        }
    }
}

@keyframes scroll {
    to {
        transform: translate(calc(-50% - 2.5rem));
    }
}
</style>

<script>
const scrollText: NodeListOf<HTMLElement> = document.querySelectorAll<HTMLElement>(".scrolling-marquee");

if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
  scrollingText();
}

function scrollingText(): void {
  scrollText.forEach((scroller: HTMLElement) => {
    scroller.setAttribute("data-animated", "true");

    const scrollTextInner: HTMLElement | null = scroller.querySelector<HTMLElement>(".scrolling-marquee-inner");
    if (scrollTextInner) {
      const scrollContent: HTMLElement[] = Array.from(scrollTextInner.children) as HTMLElement[];

      for (let i = 0; i < 3; i++) {
        scrollContent.forEach((item: HTMLElement) => {
          const duplicatedItem: HTMLElement = item.cloneNode(true) as HTMLElement;
          duplicatedItem.setAttribute("aria-hidden", "true");
          scrollTextInner.appendChild(duplicatedItem);
        });
      }
    }
  });
}
</script>